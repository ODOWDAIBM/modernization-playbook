(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{"+vHr":function(e,t,a){"use strict";a.r(t),a.d(t,"Title",(function(){return o})),a.d(t,"_frontmatter",(function(){return c})),a.d(t,"default",(function(){return m}));a("91GP"),a("rGqo"),a("yt8O"),a("Btvt"),a("RW0V"),a("q1tI");var n=a("7ljp"),i=a("013z");a("qKvR");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}var o=function(){return Object(n.b)("span",null,"Refactoring Java EE Applications",Object(n.b)("br",null)," ",Object(n.b)("h2",null,"A phased approach to refactoring a Monolith in to Micro Services"))},c={},s=function(e){return function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),Object(n.b)("div",t)}},p=s("PageDescription"),b=s("AnchorLinks"),l=s("AnchorLink"),h={Title:o,_frontmatter:c},u=i.a;function m(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,n,i={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,["components"]);return Object(n.b)(u,r({},h,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)(p,{mdxType:"PageDescription"},Object(n.b)("p",null,"A phased approach to refactoring a Monolith in to Micro Services")),Object(n.b)(b,{mdxType:"AnchorLinks"},Object(n.b)(l,{mdxType:"AnchorLink"},"Introduction"),Object(n.b)(l,{mdxType:"AnchorLink"},"Application Overview "),Object(n.b)(l,{mdxType:"AnchorLink"},"Analysis"),Object(n.b)(l,{mdxType:"AnchorLink"},"Build"),Object(n.b)(l,{mdxType:"AnchorLink"},"Deploy")),Object(n.b)("h2",null,"Introduction"),Object(n.b)("p",null,"Coming soon…"),Object(n.b)("h2",null,"Application Overview"),Object(n.b)("p",null,"The ",Object(n.b)("strong",{parentName:"p"},"Customer Order Services")," application is a simple store-front shopping application, built during the early days of the Web 2.0 movement. Users interact directly with a browser-based interface and manage their cart to submit orders.  This application is built using the traditional ",Object(n.b)("a",r({parentName:"p"},{href:"http://www.tonymarston.net/php-mysql/3-tier-architecture.html"}),"3-Tier Architecture")," model, with an HTTP server, an application server, and a supporting database."),Object(n.b)("img",{src:"https://github.com/ibm-cloud-architecture/refarch-jee/raw/master/static/imgs/apparch-pc-phase0-customerorderservices.png",alt:"Phase 0 Application Architecture"}),Object(n.b)("p",null,"There are several components of the overall application architecture:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Starting with the database, the application leverages two SQL-based databases running on ",Object(n.b)("a",r({parentName:"p"},{href:"https://www.ibm.com/analytics/us/en/technology/db2/"}),"IBM DB2"),".")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"The application exposes its data model through an ",Object(n.b)("a",r({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Enterprise_JavaBeans"}),"Enterprise JavaBean")," layer, named ",Object(n.b)("strong",{parentName:"p"},"CustomerOrderServices"),".  This components leverages the ",Object(n.b)("a",r({parentName:"p"},{href:"https://en.wikibooks.org/wiki/Java_Persistence/What_is_JPA%3F"}),"Java Persistence API")," to exposed the backend data model to calling services with minimal coding effort."),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"This build of the application uses JavaEE6 features for EJBs and JPA."))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"The next tier of the application, named ",Object(n.b)("strong",{parentName:"p"},"CustomerOrderServicesWeb"),", exposes the necessary business APIs via REST-based web services.  This component leverages the ",Object(n.b)("a",r({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Java_API_for_RESTful_Web_Services"}),"JAX-RS")," libraries for creating Java-based REST services with minimal coding effort."),Object(n.b)("ul",{parentName:"li"},Object(n.b)("li",{parentName:"ul"},"This build of the application is using ",Object(n.b)("strong",{parentName:"li"},"JAX-RS 1.1")," version of the respective capability."))),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"The application’s user interface is exposed through the ",Object(n.b)("strong",{parentName:"p"},"CustomerOrderServicesWeb")," component as well, in the form of a ",Object(n.b)("a",r({parentName:"p"},{href:"#tbd"}),"Dojo Toolkit"),"-based JavaScript application.  Delivering the user interface and business APIs in the same component is one major inhibitor our migration strategy will help to alleviate in the long-term.")),Object(n.b)("li",{parentName:"ul"},Object(n.b)("p",{parentName:"li"},"Finally, there is an additional integration testing component, named ",Object(n.b)("strong",{parentName:"p"},"CustomerOrderServicesTest")," that is built to quickly validate an application’s build and deployment to a given application server.  This test component contains both ",Object(n.b)("strong",{parentName:"p"},"JPA")," and ",Object(n.b)("strong",{parentName:"p"},"JAX-RS"),"-based tests."))),Object(n.b)("h2",null,"How the Application was Modernized"),Object(n.b)("p",null,"Coming soon…"),Object(n.b)("h2",null,"Summary"),Object(n.b)("p",null,"This application has been refactored in a series of steps from the original ",Object(n.b)("a",r({parentName:"p"},{href:"https://github.com/ibm-cloud-architecture/cloudpak-for-applications/tree/was855"}),"WebSphere ND v8.5.5 version")," to run as Micro Services on Red Hat OpenShift."))}m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-applications-refactor-index-mdx-551350d1d296a496247a.js.map