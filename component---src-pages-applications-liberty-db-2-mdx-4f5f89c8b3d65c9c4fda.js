(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{"3hKa":function(e,t,n){"use strict";n.r(t),n.d(t,"Title",(function(){return i})),n.d(t,"_frontmatter",(function(){return l})),n.d(t,"default",(function(){return d}));n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("q1tI");var o=n("7ljp"),r=n("013z");n("qKvR");function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var c,i=function(){return Object(o.b)("span",null,"Modernizing runtimes with Liberty ",Object(o.b)("br",null)," ",Object(o.b)("h2",null,"Deploy DB2 container with ORDER database"))},l={},b=(c="PageDescription",function(e){return console.warn("Component "+c+" was not imported, exported, or provided by MDXProvider as global scope"),Object(o.b)("div",e)}),p={Title:i,_frontmatter:l},u=r.a;function d(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(o.b)(u,a({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)(b,{mdxType:"PageDescription"},Object(o.b)("p",null,"Configure the ORDER database required for the CustomerOrderResource application.")),Object(o.b)("p",null,"This section covers how to deploy a DB2 container to Red Hat OpenShift that has been pre-configured with the ORDER database required for the CustomerOrderResource application."),Object(o.b)("h2",null,"Clone a repository (if you haven’t already…)"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Issue the following command to clone the repository that contains the required files")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{}),"git clone https://github.com/ibm-cloud-architecture/appmod-liberty-toolkit\n")),Object(o.b)("h2",null,"Navigate to the DB2 folder"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The ",Object(o.b)("inlineCode",{parentName:"li"},"yaml")," files for the ",Object(o.b)("inlineCode",{parentName:"li"},"Deployment")," and ",Object(o.b)("inlineCode",{parentName:"li"},"Service")," are in the ",Object(o.b)("inlineCode",{parentName:"li"},"db2")," folder of the repository")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{}),"cd appmod-liberty-toolkit\n\ncd db2\n")),Object(o.b)("h2",null,"Deploy the DB2 image to OpenShift"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Issue the following commands to create a ",Object(o.b)("inlineCode",{parentName:"li"},"namespace"),", ",Object(o.b)("inlineCode",{parentName:"li"},"service account"),", ",Object(o.b)("inlineCode",{parentName:"li"},"deploymentconfig")," and ",Object(o.b)("inlineCode",{parentName:"li"},"service"),":")),Object(o.b)("pre",null,Object(o.b)("code",a({parentName:"pre"},{}),"oc create ns db2\noc project db2\noc create serviceaccount mysvcacct -n db2\noc adm policy add-scc-to-user privileged system:serviceaccount:db2:mysvcacct\noc apply -f db2-dc.yaml\noc apply -f db2-service.yaml\n")),Object(o.b)("p",null,"The DB2 database will take a few minutes to start and will then be accessible in the Cluster at ",Object(o.b)("inlineCode",{parentName:"p"},"db2.db2.svc:50000")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"If you want to expose the database outside of the cluster, use the ",Object(o.b)("inlineCode",{parentName:"li"},"db2-nodeport.yaml")," file")))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-applications-liberty-db-2-mdx-4f5f89c8b3d65c9c4fda.js.map